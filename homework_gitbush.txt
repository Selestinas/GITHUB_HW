Костевич Кристина
Дз Git hub
https://github.com/Selestinas?tab=repositories


Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
[Зайти на сайт github, нажать Repositories, New, ввести название Json.]
 5. Клонировать репозиторий JSON на локальный компьютер.
1.Копировать "Code"
2.Открыть gitbush, git clone > вставить ссылку
 6. Внутри локального JSON создать файл “new.json”.      
 touch new.json
 7. Добавить файл под гит.				     		
 git add .
 8. Закоммитить файл.					     		
 git commit -m "написать комментарий"
 9. Отправить файл на внешний GitHub репозиторий.            		
 git push origin
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.						     		
 vim new.json, I, ввести текст, ESC, :х
 11. Отправить изменения на внешний репозиторий.	     		
 git status, git add ., git commit -m "about me"	
 12. Создать файл preferences.json 			    		
 touch preferences.json 	
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.                                    		
 vim preferences.json  I, ввести текст, ESC, :х
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON 
 touch sklls.json, vim sklls.json
 15. Отправить сразу 2 файла на внешний репозиторий.          		
 git commit -am "skills_preferences", git push origin
 16. На веб интерфейсе создать файл bug_report.json.          		
 Зайти на сайт, ВЫБРАТЬ РЕПОЗИТОРИЙ json, нажать "add file"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  	
 Нажать Commit 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. Открыть файл, редактировать,ввести текст
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  	
 Нажать Commit
 20. Синхронизировать внешний и локальный репозиторий JSON              
 Нажать"Code", копироватьб git clone, вставить ссылку


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.			
 touch new.xml
 24. Добавить файл под гит.						
 git add .
 25. Закоммитить файл.							
 git commit -m "написать комментарий"
 26. Отправить файл на внешний GitHub репозиторий.			
 git push origin
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.								
 vim new.xml, I, ввести текст, ESC, :х
 28. Отправить изменения на внешний репозиторий.			
 git status, git add ., git commit -m "about me"
 29. Создать файл preferences.xml					
 touch preferences.xml	
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.						
 vim preferences.xml  I, ввести текст, ESC, :х
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML	touch sklls.json 
vim sklls.json  I, ввести текст, ESC, :х									
									
 32. Сделать коммит в одну строку.					
 git -am "skills_preferences",			
 33. Отправить сразу 2 файла на внешний репозиторий.			
 git push origin
 34. На веб интерфейсе создать файл bug_report.xml.			
 Зайти на сайт,выбрать репозиторий XML нажать "add file"
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	
 Нажать Commit 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. Oткрыть файл, редактировать,ввести текст
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.    
 Нажать Commit
 38. Синхронизировать внешний и локальный репозиторий XML 		
 Нажать"Code", копироватьб git clone, вставить ссылку



TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 3. Внутри локального TXT создать файл “new.txt”.			touch new.txt
 4. Добавить файл под гит.						git add .
 5. Закоммитить файл.							git commit -m "написать комментарий"
 6. Отправить файл на внешний GitHub репозиторий.			git push origin
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.								vim new.txt, I, ввести текст, ESC, :х
 8. Отправить изменения на внешний репозиторий.				git status, git add ., git commit -m "about me"
 9. Создать файл preferences.txt					touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.						vim preferences.txt” ввести текст, ESC, :х
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT	touch sklls.txt 
 12. Сделать коммит в одну строку.					git -am "skills_preferences"
 13. Отправить сразу 2 файла на внешний репозиторий.			git push origin
 14. На веб интерфейсе создать файл bug_report.txt.			Зайти на сайт,выбрать репозиторий TXT, нажать "add file"
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	Нажать Commit	
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. Нажать "Edit file"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	Нажать Commit
 18. Синхронизировать внешний и локальный репозиторий TXT		Нажать"Code", копировать, git clone, вставить ссылку
